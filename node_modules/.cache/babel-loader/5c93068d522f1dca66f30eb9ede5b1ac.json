{"ast":null,"code":"var _jsxFileName = \"/home/pragya_singh/hu2020-vmc/src/component/Select/select.tsx\";\nimport * as React from 'react';\nimport './select.styles.scss';\nimport chevronDown from \"../../assets/images/down.svg\";\nimport chevronUp from \"../../assets/images/up.svg\";\n\nconst SelectMenuOption = props => {\n  const {\n    option,\n    onSelect\n  } = props;\n\n  const onItemClick = () => onSelect(option);\n\n  return React.createElement(\"li\", {\n    className: `menu-list--item`,\n    onClick: onItemClick,\n    role: \"option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, option.label);\n};\n\nexport const Select = props => {\n  const {\n    options\n  } = props;\n  const [selectedOption, setSelectedOption] = React.useState(props.default);\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  const customClassPrefix = props.customClassPrefix ? `${props.customClassPrefix}-` : ``;\n\n  const onOptionSelect = option => {\n    setSelectedOption(option);\n    setIsMenuOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: `${customClassPrefix} react-selector`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: `react-selector--control`,\n    onClick: () => setIsMenuOpen(state => !state),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: `react-selector--control--label`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, (selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.label) || 'Select'), React.createElement(\"span\", {\n    className: `react-selector--dropdown-indicator`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: isMenuOpen ? chevronUp : chevronDown,\n    alt: `dropdown indicator ${isMenuOpen ? 'up' : 'down'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), isMenuOpen && React.createElement(\"div\", {\n    className: `react-selector--menu`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: `react-selector--menu--list`,\n    role: \"menu-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, options.map(option => React.createElement(SelectMenuOption, {\n    option: option,\n    key: option.value,\n    onSelect: onOptionSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/home/pragya_singh/hu2020-vmc/src/component/Select/select.tsx"],"names":["React","SelectMenuOption","props","option","onSelect","onItemClick","label","Select","options","selectedOption","setSelectedOption","useState","default","isMenuOpen","setIsMenuOpen","customClassPrefix","onOptionSelect","state","chevronUp","chevronDown","map","value"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,sBAAP;;;;AAmBA,MAAMC,gBAAqD,GAAIC,KAAD,IAAsC;AAChG,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBF,KAA7B;;AAEA,QAAMG,WAAW,GAAG,MAAYD,QAAQ,CAACD,MAAD,CAAxC;;AAEA,SACI;AAAI,IAAA,SAAS,EAAG,iBAAhB;AAAkC,IAAA,OAAO,EAAEE,WAA3C;AAAwD,IAAA,IAAI,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,MAAM,CAACG,KADZ,CADJ;AAKH,CAVD;;AAYA,OAAO,MAAMC,MAAsC,GAAIL,KAAD,IAAiC;AACnF,QAAM;AAAEM,IAAAA;AAAF,MAAcN,KAApB;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCV,KAAK,CAACW,QAAN,CAAkDT,KAAK,CAACU,OAAxD,CAA5C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,KAAK,CAACW,QAAN,CAAe,KAAf,CAApC;AAEA,QAAMI,iBAAiB,GAAGb,KAAK,CAACa,iBAAN,GAA2B,GAAEb,KAAK,CAACa,iBAAkB,GAArD,GAA2D,EAArF;;AAEA,QAAMC,cAAc,GAAIb,MAAD,IAAyC;AAC5DO,IAAAA,iBAAiB,CAACP,MAAD,CAAjB;AACAW,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAG,GAAEC,iBAAkB,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAG,yBAApB;AAA8C,IAAA,OAAO,EAAE,MAAYD,aAAa,CAACG,KAAK,IAAI,CAACA,KAAX,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAG,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmD,CAAAR,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEH,KAAhB,KAAyB,QAA5E,CADJ,EAEI;AAAM,IAAA,SAAS,EAAG,oCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,GAAG,EAAEO,UAAU,GAAGK,SAAH,GAAeC,WADlC;AAEI,IAAA,GAAG,EAAG,sBAAqBN,UAAU,GAAG,IAAH,GAAU,MAAO,EAF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,EAUKA,UAAU,IACP;AAAK,IAAA,SAAS,EAAG,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAG,4BAAhB;AAA6C,IAAA,IAAI,EAAC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OAAO,CAACY,GAAR,CAAajB,MAAD,IACT,oBAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEA,MAA1B;AAAkC,IAAA,GAAG,EAAEA,MAAM,CAACkB,KAA9C;AAAqD,IAAA,QAAQ,EAAEL,cAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ,CAXR,CADJ;AAsBH,CAlCM","sourcesContent":["import * as React from 'react';\nimport './select.styles.scss';\nimport chevronDown from '../../assets/images/down.svg';\nimport chevronUp from '../../assets/images/up.svg';\n\ninterface SelectPropsInterface {\n    options: SelectOptionInterface[];\n    default?: SelectOptionInterface;\n    customClassPrefix?: string;\n}\n\ninterface SelectOptionInterface {\n    label: string;\n    value: any;\n}\n\ninterface SelectMenuOptionInterface {\n    option: SelectOptionInterface;\n    onSelect: (option: SelectOptionInterface) => void;\n}\nconst SelectMenuOption: React.FC<SelectMenuOptionInterface> = (props: SelectMenuOptionInterface) => {\n    const { option, onSelect } = props;\n\n    const onItemClick = (): void => onSelect(option);\n\n    return (\n        <li className={`menu-list--item`} onClick={onItemClick} role=\"option\">\n            {option.label}\n        </li>\n    );\n};\n\nexport const Select: React.FC<SelectPropsInterface> = (props: SelectPropsInterface) => {\n    const { options } = props;\n    const [selectedOption, setSelectedOption] = React.useState<SelectOptionInterface | undefined>(props.default);\n    const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n    const customClassPrefix = props.customClassPrefix ? `${props.customClassPrefix}-` : ``;\n\n    const onOptionSelect = (option: SelectOptionInterface): void => {\n        setSelectedOption(option);\n        setIsMenuOpen(false);\n    };\n\n    return (\n        <div className={`${customClassPrefix} react-selector`}>\n            <button className={`react-selector--control`} onClick={(): void => setIsMenuOpen(state => !state)}>\n                <div className={`react-selector--control--label`}>{selectedOption?.label || 'Select'}</div>\n                <span className={`react-selector--dropdown-indicator`}>\n                    <img\n                        src={isMenuOpen ? chevronUp : chevronDown}\n                        alt={`dropdown indicator ${isMenuOpen ? 'up' : 'down'}`}\n                    />\n                </span>\n            </button>\n            {isMenuOpen && (\n                <div className={`react-selector--menu`}>\n                    <ul className={`react-selector--menu--list`} role=\"menu-list\">\n                        {options.map((option: SelectOptionInterface) => (\n                            <SelectMenuOption option={option} key={option.value} onSelect={onOptionSelect} />\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}