{"ast":null,"code":"import _slicedToArray from\"/home/pragya_singh/hu2020-vmc/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from'react';import'./select.styles.scss';import chevronDown from\"../../assets/images/down.svg\";import chevronUp from\"../../assets/images/up.svg\";var SelectMenuOption=function SelectMenuOption(props){var option=props.option,onSelect=props.onSelect;var onItemClick=function onItemClick(){return onSelect(option);};return React.createElement(\"li\",{className:\"menu-list--item\",onClick:onItemClick,role:\"option\"},option.label);};export var Select=function Select(props){var options=props.options;var _React$useState=React.useState(props.default),_React$useState2=_slicedToArray(_React$useState,2),selectedOption=_React$useState2[0],setSelectedOption=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isMenuOpen=_React$useState4[0],setIsMenuOpen=_React$useState4[1];var customClassPrefix=props.customClassPrefix?\"\".concat(props.customClassPrefix,\"-\"):\"\";var onOptionSelect=function onOptionSelect(option){setSelectedOption(option);setIsMenuOpen(false);};return React.createElement(\"div\",{className:\"\".concat(customClassPrefix,\" react-selector\")},React.createElement(\"button\",{className:\"react-selector--control\",onClick:function onClick(){return setIsMenuOpen(function(state){return!state;});}},React.createElement(\"div\",{className:\"react-selector--control--label\"},(selectedOption===null||selectedOption===void 0?void 0:selectedOption.label)||'Select'),React.createElement(\"span\",{className:\"react-selector--dropdown-indicator\"},React.createElement(\"img\",{src:isMenuOpen?chevronUp:chevronDown,alt:\"dropdown indicator \".concat(isMenuOpen?'up':'down')}))),isMenuOpen&&React.createElement(\"div\",{className:\"react-selector--menu\"},React.createElement(\"ul\",{className:\"react-selector--menu--list\",role:\"menu-list\"},options.map(function(option){return React.createElement(SelectMenuOption,{option:option,key:option.value,onSelect:onOptionSelect});}))));};","map":{"version":3,"sources":["/home/pragya_singh/hu2020-vmc/src/component/Select/select.tsx"],"names":["React","SelectMenuOption","props","option","onSelect","onItemClick","label","Select","options","useState","default","selectedOption","setSelectedOption","isMenuOpen","setIsMenuOpen","customClassPrefix","onOptionSelect","state","chevronUp","chevronDown","map","value"],"mappings":"gHAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,sBAAP,C,wGAmBA,GAAMC,CAAAA,gBAAqD,CAAG,QAAxDA,CAAAA,gBAAwD,CAACC,KAAD,CAAsC,IACxFC,CAAAA,MADwF,CACnED,KADmE,CACxFC,MADwF,CAChFC,QADgF,CACnEF,KADmE,CAChFE,QADgF,CAGhG,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAYD,CAAAA,QAAQ,CAACD,MAAD,CAApB,EAApB,CAEA,MACI,2BAAI,SAAS,kBAAb,CAAkC,OAAO,CAAEE,WAA3C,CAAwD,IAAI,CAAC,QAA7D,EACKF,MAAM,CAACG,KADZ,CADJ,CAKH,CAVD,CAYA,MAAO,IAAMC,CAAAA,MAAsC,CAAG,QAAzCA,CAAAA,MAAyC,CAACL,KAAD,CAAiC,IAC3EM,CAAAA,OAD2E,CAC/DN,KAD+D,CAC3EM,OAD2E,qBAEvCR,KAAK,CAACS,QAAN,CAAkDP,KAAK,CAACQ,OAAxD,CAFuC,oDAE5EC,cAF4E,qBAE5DC,iBAF4D,0CAG/CZ,KAAK,CAACS,QAAN,CAAe,KAAf,CAH+C,qDAG5EI,UAH4E,qBAGhEC,aAHgE,qBAKnF,GAAMC,CAAAA,iBAAiB,CAAGb,KAAK,CAACa,iBAAN,WAA6Bb,KAAK,CAACa,iBAAnC,QAA1B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACb,MAAD,CAAyC,CAC5DS,iBAAiB,CAACT,MAAD,CAAjB,CACAW,aAAa,CAAC,KAAD,CAAb,CACH,CAHD,CAKA,MACI,4BAAK,SAAS,WAAKC,iBAAL,mBAAd,EACI,8BAAQ,SAAS,0BAAjB,CAA8C,OAAO,CAAE,yBAAYD,CAAAA,aAAa,CAAC,SAAAG,KAAK,QAAI,CAACA,KAAL,EAAN,CAAzB,EAAvD,EACI,2BAAK,SAAS,iCAAd,EAAmD,CAAAN,cAAc,OAAd,EAAAA,cAAc,SAAd,QAAAA,cAAc,CAAEL,KAAhB,GAAyB,QAA5E,CADJ,CAEI,4BAAM,SAAS,qCAAf,EACI,2BACI,GAAG,CAAEO,UAAU,CAAGK,SAAH,CAAeC,WADlC,CAEI,GAAG,8BAAwBN,UAAU,CAAG,IAAH,CAAU,MAA5C,CAFP,EADJ,CAFJ,CADJ,CAUKA,UAAU,EACP,2BAAK,SAAS,uBAAd,EACI,0BAAI,SAAS,6BAAb,CAA6C,IAAI,CAAC,WAAlD,EACKL,OAAO,CAACY,GAAR,CAAY,SAACjB,MAAD,QACT,qBAAC,gBAAD,EAAkB,MAAM,CAAEA,MAA1B,CAAkC,GAAG,CAAEA,MAAM,CAACkB,KAA9C,CAAqD,QAAQ,CAAEL,cAA/D,EADS,EAAZ,CADL,CADJ,CAXR,CADJ,CAsBH,CAlCM","sourcesContent":["import * as React from 'react';\nimport './select.styles.scss';\nimport chevronDown from '../../assets/images/down.svg';\nimport chevronUp from '../../assets/images/up.svg';\n\ninterface SelectPropsInterface {\n    options: SelectOptionInterface[];\n    default?: SelectOptionInterface;\n    customClassPrefix?: string;\n}\n\ninterface SelectOptionInterface {\n    label: string;\n    value: any;\n}\n\ninterface SelectMenuOptionInterface {\n    option: SelectOptionInterface;\n    onSelect: (option: SelectOptionInterface) => void;\n}\nconst SelectMenuOption: React.FC<SelectMenuOptionInterface> = (props: SelectMenuOptionInterface) => {\n    const { option, onSelect } = props;\n\n    const onItemClick = (): void => onSelect(option);\n\n    return (\n        <li className={`menu-list--item`} onClick={onItemClick} role=\"option\">\n            {option.label}\n        </li>\n    );\n};\n\nexport const Select: React.FC<SelectPropsInterface> = (props: SelectPropsInterface) => {\n    const { options } = props;\n    const [selectedOption, setSelectedOption] = React.useState<SelectOptionInterface | undefined>(props.default);\n    const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n    const customClassPrefix = props.customClassPrefix ? `${props.customClassPrefix}-` : ``;\n\n    const onOptionSelect = (option: SelectOptionInterface): void => {\n        setSelectedOption(option);\n        setIsMenuOpen(false);\n    };\n\n    return (\n        <div className={`${customClassPrefix} react-selector`}>\n            <button className={`react-selector--control`} onClick={(): void => setIsMenuOpen(state => !state)}>\n                <div className={`react-selector--control--label`}>{selectedOption?.label || 'Select'}</div>\n                <span className={`react-selector--dropdown-indicator`}>\n                    <img\n                        src={isMenuOpen ? chevronUp : chevronDown}\n                        alt={`dropdown indicator ${isMenuOpen ? 'up' : 'down'}`}\n                    />\n                </span>\n            </button>\n            {isMenuOpen && (\n                <div className={`react-selector--menu`}>\n                    <ul className={`react-selector--menu--list`} role=\"menu-list\">\n                        {options.map((option: SelectOptionInterface) => (\n                            <SelectMenuOption option={option} key={option.value} onSelect={onOptionSelect} />\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}